snippet do
	do
		${0}
	end
snippet if if .. do .. end
	if ${1} do
		${0}
	end

snippet if: if .. do: ..
	if ${1}, do: ${0}

snippet ife if .. do .. else .. end
	if ${1} do
		${2}
	else
		${0}
	end

snippet ife if .. do: .. else:
	if ${1}, do: ${2}, else: ${0}

snippet unless unless .. do .. end
	unless ${1} do
		${0}
	end

snippet unless unless .. do: ..
	unless ${1}, do: ${0}

snippet unlesse unless .. do .. else .. end
	unless ${1} do
		${2}
	else
		${0}
	end

snippet unlesse unless .. do: .. else:
	unless ${1}, do: ${2}, else: ${0}

snippet cond
	cond do
		${1} ->
			${0}
	end
snippet case
	case ${1} do
		${2} ->
			${0}
	end
snippet df
	def ${1:name}, do: ${2}
snippet def
	def ${1} do
		${0}
	end
snippet def:
	def ${1}, do: ${0}
snippet defd
	@doc """
	${1}
	"""
	def ${2} do
		${0}
	end
snippet defim
	defimpl ${1}, for: ${2} do
		${0}
	end
snippet defma
	defmacro ${1} do
		${0}
	end
snippet defmo
	defmodule ${1} do
		${0}
	end
snippet defp
	defp ${1} do
		${0}
	end
snippet defpr
	defprotocol ${1}, [${0}]

snippet defr
	defrecord ${1}, ${0}

snippet doc
	@doc """
	${0}
	"""
snippet fn
	fn(${1:args}) -> ${0} end
snippet fun
	function do
	  ${0}
	end
snippet mdoc
	@moduledoc """
	${0}
	"""
snippet rec
	receive do
	${1} ->
		${0}
	end
snippet req
	require ${0}

snippet imp
	import ${0}

snippet ali
	alias ${0}

snippet test
	test "${1}" do
		${0}
	end
snippet try try .. rescue .. end
	try do
		${1}
	rescue
		${2} -> ${0}
	end
snippet pry
	require IEx; IEx.pry
	${0}
